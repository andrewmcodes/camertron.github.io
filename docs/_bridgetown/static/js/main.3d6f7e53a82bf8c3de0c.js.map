{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/lunr/lunr.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/_components sync .js$","webpack:///../src/lib/dom.ts","webpack:///../src/lib/template.ts","webpack:///../src/lib/modify-template.ts","webpack:///../src/lib/directive.ts","webpack:///../src/lib/part.ts","webpack:///../src/lib/template-instance.ts","webpack:///../src/lib/template-result.ts","webpack:///../src/lib/parts.ts","webpack:///../src/lib/template-factory.ts","webpack:///../src/lib/render.ts","webpack:///../src/lib/default-template-processor.ts","webpack:///src/lit-html.ts","webpack:///../src/lib/shady-render.ts","webpack:///../src/lib/updating-element.ts","webpack:///../src/lib/decorators.ts","webpack:///../src/lib/css-tag.ts","webpack:///src/lit-element.ts","webpack:///../src/directives/unsafe-html.ts","webpack:///./node_modules/bridgetown-quick-search/frontend/javascript/search_engine.js","webpack:///./node_modules/bridgetown-quick-search/frontend/javascript/index.js","webpack:///./frontend/javascript/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","this","message","console","asString","obj","toString","clone","keys","length","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","indexOf","fieldRef","undefined","Set","elements","complete","intersect","other","union","contains","empty","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","final","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","define","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","method","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","then","unwrapped","error","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","webpackPolyfill","deprecate","paths","children","webpackEmptyContext","req","e","code","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","removeNodes","container","nextSibling","removeChild","marker","random","nodeMarker","markerRegex","Template","parts","nodesToRemove","walker","document","createTreeWalker","content","lastPartIndex","partIndex","strings","nodeType","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","attributeLookupName","attributeValue","getAttribute","removeAttribute","statics","split","tagName","currentNode","data","parentNode","lastIndex","createMarker","createTextNode","insertBefore","previousSibling","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","countNodes","startIndex","directives","WeakMap","isDirective","noChange","nothing","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","createElement","getHTML","innerHTML","isPrimitive","isIterable","AttributeCommitter","dirty","_createPart","text","setAttribute","_getValue","committer","directive","__pendingValue","startNode","appendChild","endNode","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","_clone","itemPart","itemParts","item","NodePart","appendIntoPart","insertAfterPart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","_e","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","templateCache","templateCaches","stringsArray","keyString","Map","set","getTemplateElement","defaultTemplateProcessor","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","cacheKey","TEMPLATE_TYPES","shadyRenderSet","renderedDOM","templateElement","styles","querySelectorAll","condensedStyle","textContent","templates","from","refNode","insertCount","walkerIndex","walkerNode","insertNodeIntoTemplate","firstChild","prepareTemplateStyles","style","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","Number","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","initialize","_updateState","_updatePromise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","requestUpdateInternal","_classProperties","_v","_instanceProperties","enableUpdating","_attributeToProperty","attr","_attributeNameForProperty","attrValue","_propertyValueToAttribute","propName","_attributeToPropertyMap","getPropertyOptions","_propertyValueFromAttribute","oldValue","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","getUpdateComplete","size","_propertyToAttribute","finalize","superProperties","_ensureClassProperties","noAccessor","descriptor","getPropertyDescriptor","superCtor","props","properties","getOwnPropertyNames","getOwnPropertySymbols","createProperty","HTMLElement","customElement","classOrDescriptor","clazz","legacyCustomElement","kind","finisher","standardCustomElement","protoOrDescriptor","proto","legacyProperty","placement","initializer","standardProperty","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","ShadowRoot","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","textFromCSSResult","renderNotImplemented","userStyles","getStyles","addStyles","reduceRight","_styles","cssRules","css","rule","_getUniqueStyles","renderRoot","createRenderRoot","adoptStyles","attachShadow","shadowRootOptions","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","previousValues","unsafeHTML","previousValue","SearchEngine","indexData","snippetLength","find","contentPreview","previewTemplate","titlePreview","title","url","trim","heading","preview","padding","textToSearch","wordLocations","filter","location","min","max","startsWith","handleChange","target","currentTarget","clearTimeout","debounce","setTimeout","showResultsForQuery","LitElement","fetchSearchIndex","requestAnimationFrame","repositionIfNecessary","fetch","response","json","searchIndex","searchEngine","generateIndex","latestQuery","showResults","performSearch","requestUpdate","resultsStatus","theme","transform","rect","getBoundingClientRect","offsetWidth","innerWidth","acc","idx","componentsContext"],"mappings":"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W,EAAKR,EAAGS,KAAKb,IACP,GAEVK,EAAM/J,EACNgK,EAAM/I,IAFN6I,EAAK/J,GAGEqK,KAAKT,IAAUI,EAAIK,KAAKT,KAAWK,EAAII,KAAKT,MACjDD,EAAIC,IAKRI,EAAMhK,GADN+J,EAAK9I,GAEEoJ,KAAKV,IAAMK,EAAIK,KAAKV,KACzBI,EAAKxJ,EACLoJ,EAAIA,EAAEW,QAAQP,EAAG,KAKJ,KAAXD,IACFH,EAAIG,EAAQvE,cAAgBoE,EAAEQ,OAAO,IAGhCR,GAGF,SAAU/B,GACf,OAAOA,EAAMzC,OAAOhE,KAIxBC,EAAK6E,SAASG,iBAAiBhF,EAAKQ,QAAS;;;;;AAmB7CR,EAAKqJ,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUE,QAAO,SAAUrD,EAAMsD,GAE3C,OADAtD,EAAKsD,GAAYA,EACVtD,IACN,IAEH,OAAO,SAAUK,GACf,GAAIA,GAAS+C,EAAM/C,EAAMrF,cAAgBqF,EAAMrF,WAAY,OAAOqF,IAiBtExG,EAAKO,eAAiBP,EAAKqJ,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGFrJ,EAAK6E,SAA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","file":"main.3d6f7e53a82bf8c3de0c.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 4;","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n        return JSON.parse(value!) as unknown;\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: ((r?: unknown) => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   * @deprecated Override `getUpdateComplete()` instead for forward\n   *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n   */\n  protected _getUpdateComplete() {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async getUpdateComplete() {\n   *       await super.getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure Compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n * @deprecated `internalProperty` has been renamed to `state` in lit-element\n *     3.0. Please update to `state` now to be compatible with 3.0.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like the Closure Compiler.\n * @category Decorator\n */\nexport const state = (options?: InternalPropertyDeclaration) =>\n    internalProperty(options);\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const prop =\n          name !== undefined ? name : (protoOrDescriptor as ClassElement).key;\n      const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                  // tslint:disable-next-line:no-any testing existence on older browsers\n                  ((node as any).matches ?\n                       (node as Element).matches(selector) :\n                       legacyMatches.call(node as Element, selector)));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport {UpdatingElement as ReactiveElement} from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.1');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\nexport type CSSResultGroup = CSSResultOrNative|CSSResultArray;\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultGroup;\n\n  /** @nocollapse */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultGroup|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow(\n        (this.constructor as typeof LitElement).shadowRootOptions);\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => (s as CSSResult).cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = (s as CSSResult).cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import lunr from \"lunr\"\n\nclass SearchEngine {\n  async generateIndex(indexData) {\n    this.index = lunr(function () {\n      this.ref(\"id\");\n      this.field(\"id\");\n      this.field(\"title\", {boost: 10});\n      this.field(\"categories\");\n      this.field(\"tags\");\n      this.field(\"url\");\n      this.field(\"content\");\n      \n      indexData.forEach(item => {\n        if (item.content) {\n          this.add(item);\n        }\n      })\n    })\n\n    this.indexData = indexData\n  }\n\n  performSearch(query, snippetLength = null) {\n    if (this.index) {\n      this.query = query\n      const results = this.index.search(this.query)\n\n      if (results.length) {\n        return results.map(result => {\n          const item = this.indexData.find(item => item.id == result.ref)\n          const contentPreview = this.previewTemplate(item.content, snippetLength)\n          const titlePreview = this.previewTemplate(item.title) + `<!--(${result.score})-->`\n\n          return {\n            url: item.url.trim(),\n            heading: titlePreview,\n            preview: contentPreview\n          }\n        })\n      } else {\n        return []\n      }\n    } else {\n      throw new Error(\"Search index hasn't yet loaded. Run the generateIndex function\")\n    }\n  }\n\n  previewTemplate(text, length) {\n    if (length == null)\n      length = 300\n    const padding = length / 2\n    let output\n\n    if (length) {\n      // Get sorted locations of all the words in the search query\n      const textToSearch = text.toLowerCase()\n      const wordLocations = this.query.toLowerCase().split(\" \").map(word => {\n        return textToSearch.indexOf(word)\n      }).filter(location => location != -1).sort((a,b) => { return a-b })\n      \n      // Grab the first location and back up a bit\n      // Then go past second location or just use the length\n      if (wordLocations[1]) {\n        length = Math.min(wordLocations[1] - wordLocations[0], length)\n      }\n\n      output = text.substr(Math.max(0, wordLocations[0] - padding), length + padding)\n    } else {\n      output = text\n    }\n\n    if (!text.startsWith(output)) {\n      output = \"…\" + output\n    }\n    if (!text.endsWith(output)) {\n      output = output + \"…\"\n    }\n\n    this.query.toLowerCase().split(\" \").forEach(word => {\n      if (word != \"\") {\n        output = output.replace(\n          new RegExp(`(${word.replace(/[\\.\\*\\+\\(\\)]/g, \"\")})`, \"ig\"),\n          `<strong>$1</strong>`\n        )\n      }\n    })\n\n    return output\n  }\n}\n\nexport default SearchEngine\n","/* Use in your app by simply adding to your app's index.js:\n\nimport \"bridgetown-quick-search\"\n\nAlso requires:\n\n$ yarn add @babel/plugin-proposal-decorators --dev\n\nAnd in webpack.config.js:\n\nplugins: [\n  [\"@babel/plugin-proposal-decorators\", { \"legacy\": true }],\n  [\"@babel/plugin-proposal-class-properties\", { \"loose\" : true }],\n  ...\n]\n*/\nimport { LitElement, css, html, customElement, property } from \"lit-element\"\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\"\nimport SearchEngine from \"./search_engine\"\n\n@customElement(\"bridgetown-search-form\")\nexport class BridgetownSearchForm extends LitElement {\n  render() {\n    return html`<form><slot name=\"input\"></slot></form><slot></slot>`\n  }\n\n  firstUpdated() {\n    this.querySelector(\"input\").addEventListener(\"input\", this.handleChange.bind(this));\n  }\n\n  handleChange(e) {\n    const target = e.currentTarget\n    clearTimeout(this.debounce)\n\n    this.debounce = setTimeout(() => {\n      this.querySelector(\"bridgetown-search-results\").showResultsForQuery(target.value)\n    }, 250)\n  }\n}\n\n@customElement(\"bridgetown-search-results\")\nexport class BridgetownSearchResults extends LitElement {\n  @property({ type: String }) theme\n  @property({ type: Array }) results = []\n  @property({ type: Number }) snippetLength = 142\n\n  static styles = css`\n    :host {\n      display: block;\n      position: absolute;\n      margin: 0;\n      margin-top: 1px;\n      padding: 0;\n      width: 94vw;\n      max-width: 550px;\n      font-weight: 400;\n      font-size: 1rem;\n      font-style: normal;\n      text-transform: initial;\n      z-index: 9999;\n      background: transparent;\n    }\n    [part=inner] {\n      margin: 0;\n      list-style-type: none;\n      padding: 0.8em 1.2em;\n      background: var(--background, #ffffff);\n      color: var(--text-color, #333333);\n      display: none;\n      border-radius: var(--border-radius, 10px);\n      border-top-left-radius: var(--border-corner-radius, 4px);\n      max-height: 50vh;\n      overflow: auto;\n      overflow-x: hidden;\n      box-shadow: 0px 15px 15px rgba(0,0,0,0.1);\n    }\n    [part=inner].show {\n      display: block;\n    }\n    [part=inner].dark-theme {\n      background: var(--background-dark, #222222);\n      color: var(--text-color-dark, #dddddd);\n    }\n\n    ul > a {\n      margin-top: 1.5em;\n      margin-bottom: 0;\n    }\n    ul > a:first-of-type {\n      margin-top: 0;\n    }\n    li {\n      margin: 0;\n      padding: 0;\n    }\n\n    h1 {\n      font-size: 1em;\n      font-weight: 400;\n      font-style: normal;\n      margin-top: 0;\n      margin-bottom: 0.5em;\n      padding-bottom: 3px;\n      border-bottom: 1px solid var(--divider-color, #cccccc);\n      color: var(--link-color, #000000);\n    }\n    h1 a {\n      display: block;\n    }\n    [part=inner].dark-theme h1 {\n      color: var(--link-color-dark, #ffffff);\n      border-bottom: 1px solid var(--divider-color-dark, #444444);\n    }\n    a {\n      color: inherit;\n      text-decoration: none;\n      display: block;\n    }\n    p {\n      margin-top: 0;\n      margin-bottom: 1em;\n      word-wrap: break-word;\n    }\n    li p {\n      font-size: 0.8em;\n    }\n    p strong {\n      color: var(--link-color, #000000);\n    }\n    [part=inner].dark-theme p strong {\n      color: var(--link-color-dark, #ffffff);\n    }\n    p#no-results {\n      margin-top: 0.5em;\n    }\n  `\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.fetchSearchIndex()\n\n    window.addEventListener(\"resize\", () => {\n      window.requestAnimationFrame(this.repositionIfNecessary.bind(this))\n//      clearTimeout(this.resizeDebounce)\n//      this.resizeDebounce = setTimeout(() => {\n//        this.repositionIfNecessary()\n//      }, 100)\n    })\n  }\n\n  async fetchSearchIndex() \n  {\n    const response = await fetch(`/bridgetown_quick_search/index.json`)\n    this.searchIndex = await response.json()\n\n    this.searchEngine = new SearchEngine()\n    this.searchEngine.generateIndex(this.searchIndex)\n  }\n\n  showResultsForQuery(query) {\n    this.latestQuery = query\n    if (query && query.length > 1) {\n      this.showResults = true\n      this.results = this.searchEngine.performSearch(query, this.snippetLength).slice(0, 10)\n    } else {\n      this.showResults = false\n    }\n    this.requestUpdate()\n  }\n\n  render() {\n    this.repositionIfNecessary()\n    \n    let resultsStatus = \"\"\n    if (this.results.length == 0) {\n      resultsStatus = html`<p id=\"no-results\">No results found for \"<strong>${this.latestQuery}</strong>\"</p>`\n    }\n\n    const theme = this.theme == \"dark\" ? \"dark\" : \"light\"\n\n    return html`<ul part=\"inner\" class=\"${theme}-theme ${this.showResults ? \"show\" : \"\"}\">\n      ${resultsStatus}\n      ${this.results.map(result => {\n        return html`\n          <a href=\"${result.url}\">\n            <li><h1>${unsafeHTML(result.heading)}</h1>\n            <p>${unsafeHTML(result.preview)}</p></li>\n          </a>\n        `\n      })}\n    </ul>`\n  }\n\n  repositionIfNecessary() {\n    this.style.transform = `translateX(0px)`\n\n    const rect = this.getBoundingClientRect()\n    const fullWidth = window.innerWidth - rect.width\n    const offsetWidth = fullWidth - rect.x\n\n    if (rect.x + rect.width > window.innerWidth) {\n      this.style.transform = `translateX(${offsetWidth}px)`\n    }\n  }\n}\n","import Bulmatown from \"bulmatown\"\n\nimport \"index.scss\"\n\n\n// Import all javascript files from src/_components\nconst componentsContext = require.context(\"bridgetownComponents\", true, /.js$/)\ncomponentsContext.keys().forEach(componentsContext)\n\nconsole.info(\"Bridgetown is loaded!\")\n"],"sourceRoot":""}